// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="contrast_hls_rom,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.340000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=1273,HLS_SYN_LUT=4512,HLS_VERSION=2018_2}" *)

module contrast_hls_rom (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_r_TDATA,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TUSER,
        input_r_TLAST,
        input_r_TID,
        input_r_TDEST,
        diff_sum_0,
        diff_sum_1,
        diff_sum_2,
        diff_sum_3,
        diff_sum_4,
        diff_sum_5,
        diff_sum_6,
        diff_sum_7,
        diff_sum_8,
        diff_sum_9,
        diff_sum_10,
        input_r_TVALID,
        input_r_TREADY,
        diff_sum_0_ap_vld,
        diff_sum_1_ap_vld,
        diff_sum_2_ap_vld,
        diff_sum_3_ap_vld,
        diff_sum_4_ap_vld,
        diff_sum_5_ap_vld,
        diff_sum_6_ap_vld,
        diff_sum_7_ap_vld,
        diff_sum_8_ap_vld,
        diff_sum_9_ap_vld,
        diff_sum_10_ap_vld
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [7:0] input_r_TDATA;
input  [0:0] input_r_TKEEP;
input  [0:0] input_r_TSTRB;
input  [0:0] input_r_TUSER;
input  [0:0] input_r_TLAST;
input  [0:0] input_r_TID;
input  [0:0] input_r_TDEST;
output  [15:0] diff_sum_0;
output  [15:0] diff_sum_1;
output  [15:0] diff_sum_2;
output  [15:0] diff_sum_3;
output  [15:0] diff_sum_4;
output  [15:0] diff_sum_5;
output  [15:0] diff_sum_6;
output  [15:0] diff_sum_7;
output  [15:0] diff_sum_8;
output  [15:0] diff_sum_9;
output  [15:0] diff_sum_10;
input   input_r_TVALID;
output   input_r_TREADY;
output   diff_sum_0_ap_vld;
output   diff_sum_1_ap_vld;
output   diff_sum_2_ap_vld;
output   diff_sum_3_ap_vld;
output   diff_sum_4_ap_vld;
output   diff_sum_5_ap_vld;
output   diff_sum_6_ap_vld;
output   diff_sum_7_ap_vld;
output   diff_sum_8_ap_vld;
output   diff_sum_9_ap_vld;
output   diff_sum_10_ap_vld;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire   [5:0] Block_proc_U0_img_src_0_rows_V_out_din;
wire    Block_proc_U0_img_src_0_rows_V_out_write;
wire   [5:0] Block_proc_U0_img_src_0_cols_V_out_din;
wire    Block_proc_U0_img_src_0_cols_V_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_input_r_TREADY;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_V_write;
wire   [5:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [5:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
wire    Duplicate_my_U0_ap_start;
wire    Duplicate_my_U0_start_full_n;
wire    Duplicate_my_U0_ap_done;
wire    Duplicate_my_U0_ap_continue;
wire    Duplicate_my_U0_ap_idle;
wire    Duplicate_my_U0_ap_ready;
wire    Duplicate_my_U0_start_out;
wire    Duplicate_my_U0_start_write;
wire    Duplicate_my_U0_src_rows_V_read;
wire    Duplicate_my_U0_src_cols_V_read;
wire    Duplicate_my_U0_src_data_stream_V_read;
wire   [7:0] Duplicate_my_U0_dst0_data_stream_V_din;
wire    Duplicate_my_U0_dst0_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst1_data_stream_V_din;
wire    Duplicate_my_U0_dst1_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst2_data_stream_V_din;
wire    Duplicate_my_U0_dst2_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst3_data_stream_V_din;
wire    Duplicate_my_U0_dst3_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst4_data_stream_V_din;
wire    Duplicate_my_U0_dst4_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst5_data_stream_V_din;
wire    Duplicate_my_U0_dst5_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst6_data_stream_V_din;
wire    Duplicate_my_U0_dst6_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst7_data_stream_V_din;
wire    Duplicate_my_U0_dst7_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst8_data_stream_V_din;
wire    Duplicate_my_U0_dst8_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst9_data_stream_V_din;
wire    Duplicate_my_U0_dst9_data_stream_V_write;
wire   [7:0] Duplicate_my_U0_dst10_data_stream_V_din;
wire    Duplicate_my_U0_dst10_data_stream_V_write;
wire    minus_vector26_U0_ap_start;
wire    minus_vector26_U0_ap_done;
wire    minus_vector26_U0_ap_continue;
wire    minus_vector26_U0_ap_idle;
wire    minus_vector26_U0_ap_ready;
wire    minus_vector26_U0_src_data_stream_V_read;
wire   [15:0] minus_vector26_U0_diff_sum;
wire    minus_vector26_U0_diff_sum_ap_vld;
wire    ap_sync_continue;
wire    minus_vector27_U0_ap_start;
wire    minus_vector27_U0_ap_done;
wire    minus_vector27_U0_ap_continue;
wire    minus_vector27_U0_ap_idle;
wire    minus_vector27_U0_ap_ready;
wire    minus_vector27_U0_src_data_stream_V_read;
wire   [15:0] minus_vector27_U0_diff_sum;
wire    minus_vector27_U0_diff_sum_ap_vld;
wire    minus_vector28_U0_ap_start;
wire    minus_vector28_U0_ap_done;
wire    minus_vector28_U0_ap_continue;
wire    minus_vector28_U0_ap_idle;
wire    minus_vector28_U0_ap_ready;
wire    minus_vector28_U0_src_data_stream_V_read;
wire   [15:0] minus_vector28_U0_diff_sum;
wire    minus_vector28_U0_diff_sum_ap_vld;
wire    minus_vector29_U0_ap_start;
wire    minus_vector29_U0_ap_done;
wire    minus_vector29_U0_ap_continue;
wire    minus_vector29_U0_ap_idle;
wire    minus_vector29_U0_ap_ready;
wire    minus_vector29_U0_src_data_stream_V_read;
wire   [15:0] minus_vector29_U0_diff_sum;
wire    minus_vector29_U0_diff_sum_ap_vld;
wire    minus_vector30_U0_ap_start;
wire    minus_vector30_U0_ap_done;
wire    minus_vector30_U0_ap_continue;
wire    minus_vector30_U0_ap_idle;
wire    minus_vector30_U0_ap_ready;
wire    minus_vector30_U0_src_data_stream_V_read;
wire   [15:0] minus_vector30_U0_diff_sum;
wire    minus_vector30_U0_diff_sum_ap_vld;
wire    minus_vector31_U0_ap_start;
wire    minus_vector31_U0_ap_done;
wire    minus_vector31_U0_ap_continue;
wire    minus_vector31_U0_ap_idle;
wire    minus_vector31_U0_ap_ready;
wire    minus_vector31_U0_src_data_stream_V_read;
wire   [15:0] minus_vector31_U0_diff_sum;
wire    minus_vector31_U0_diff_sum_ap_vld;
wire    minus_vector32_U0_ap_start;
wire    minus_vector32_U0_ap_done;
wire    minus_vector32_U0_ap_continue;
wire    minus_vector32_U0_ap_idle;
wire    minus_vector32_U0_ap_ready;
wire    minus_vector32_U0_src_data_stream_V_read;
wire   [15:0] minus_vector32_U0_diff_sum;
wire    minus_vector32_U0_diff_sum_ap_vld;
wire    minus_vector33_U0_ap_start;
wire    minus_vector33_U0_ap_done;
wire    minus_vector33_U0_ap_continue;
wire    minus_vector33_U0_ap_idle;
wire    minus_vector33_U0_ap_ready;
wire    minus_vector33_U0_src_data_stream_V_read;
wire   [15:0] minus_vector33_U0_diff_sum;
wire    minus_vector33_U0_diff_sum_ap_vld;
wire    minus_vector34_U0_ap_start;
wire    minus_vector34_U0_ap_done;
wire    minus_vector34_U0_ap_continue;
wire    minus_vector34_U0_ap_idle;
wire    minus_vector34_U0_ap_ready;
wire    minus_vector34_U0_src_data_stream_V_read;
wire   [15:0] minus_vector34_U0_diff_sum;
wire    minus_vector34_U0_diff_sum_ap_vld;
wire    minus_vector35_U0_ap_start;
wire    minus_vector35_U0_ap_done;
wire    minus_vector35_U0_ap_continue;
wire    minus_vector35_U0_ap_idle;
wire    minus_vector35_U0_ap_ready;
wire    minus_vector35_U0_src_data_stream_V_read;
wire   [15:0] minus_vector35_U0_diff_sum;
wire    minus_vector35_U0_diff_sum_ap_vld;
wire    minus_vector_U0_ap_start;
wire    minus_vector_U0_ap_done;
wire    minus_vector_U0_ap_continue;
wire    minus_vector_U0_ap_idle;
wire    minus_vector_U0_ap_ready;
wire    minus_vector_U0_src_data_stream_V_read;
wire   [15:0] minus_vector_U0_diff_sum;
wire    minus_vector_U0_diff_sum_ap_vld;
wire    img_src_0_rows_V_c_full_n;
wire   [5:0] img_src_0_rows_V_c_dout;
wire    img_src_0_rows_V_c_empty_n;
wire    img_src_0_cols_V_c_full_n;
wire   [5:0] img_src_0_cols_V_c_dout;
wire    img_src_0_cols_V_c_empty_n;
wire    img_src_0_data_strea_full_n;
wire   [7:0] img_src_0_data_strea_dout;
wire    img_src_0_data_strea_empty_n;
wire    img_src_0_rows_V_c26_full_n;
wire   [5:0] img_src_0_rows_V_c26_dout;
wire    img_src_0_rows_V_c26_empty_n;
wire    img_src_0_cols_V_c27_full_n;
wire   [5:0] img_src_0_cols_V_c27_dout;
wire    img_src_0_cols_V_c27_empty_n;
wire    img_src_c_0_data_str_full_n;
wire   [7:0] img_src_c_0_data_str_dout;
wire    img_src_c_0_data_str_empty_n;
wire    img_src_c_1_data_str_full_n;
wire   [7:0] img_src_c_1_data_str_dout;
wire    img_src_c_1_data_str_empty_n;
wire    img_src_c_2_data_str_full_n;
wire   [7:0] img_src_c_2_data_str_dout;
wire    img_src_c_2_data_str_empty_n;
wire    img_src_c_3_data_str_full_n;
wire   [7:0] img_src_c_3_data_str_dout;
wire    img_src_c_3_data_str_empty_n;
wire    img_src_c_4_data_str_full_n;
wire   [7:0] img_src_c_4_data_str_dout;
wire    img_src_c_4_data_str_empty_n;
wire    img_src_c_5_data_str_full_n;
wire   [7:0] img_src_c_5_data_str_dout;
wire    img_src_c_5_data_str_empty_n;
wire    img_src_c_6_data_str_full_n;
wire   [7:0] img_src_c_6_data_str_dout;
wire    img_src_c_6_data_str_empty_n;
wire    img_src_c_7_data_str_full_n;
wire   [7:0] img_src_c_7_data_str_dout;
wire    img_src_c_7_data_str_empty_n;
wire    img_src_c_8_data_str_full_n;
wire   [7:0] img_src_c_8_data_str_dout;
wire    img_src_c_8_data_str_empty_n;
wire    img_src_c_9_data_str_full_n;
wire   [7:0] img_src_c_9_data_str_dout;
wire    img_src_c_9_data_str_empty_n;
wire    img_src_c_10_data_st_full_n;
wire   [7:0] img_src_c_10_data_st_dout;
wire    img_src_c_10_data_st_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Block_proc_U0_start_full_n;
wire    Block_proc_U0_start_write;
wire   [0:0] start_for_Duplicate_my_U0_din;
wire    start_for_Duplicate_my_U0_full_n;
wire   [0:0] start_for_Duplicate_my_U0_dout;
wire    start_for_Duplicate_my_U0_empty_n;
wire   [0:0] start_for_minus_vector26_U0_din;
wire    start_for_minus_vector26_U0_full_n;
wire   [0:0] start_for_minus_vector26_U0_dout;
wire    start_for_minus_vector26_U0_empty_n;
wire   [0:0] start_for_minus_vector27_U0_din;
wire    start_for_minus_vector27_U0_full_n;
wire   [0:0] start_for_minus_vector27_U0_dout;
wire    start_for_minus_vector27_U0_empty_n;
wire   [0:0] start_for_minus_vector28_U0_din;
wire    start_for_minus_vector28_U0_full_n;
wire   [0:0] start_for_minus_vector28_U0_dout;
wire    start_for_minus_vector28_U0_empty_n;
wire   [0:0] start_for_minus_vector29_U0_din;
wire    start_for_minus_vector29_U0_full_n;
wire   [0:0] start_for_minus_vector29_U0_dout;
wire    start_for_minus_vector29_U0_empty_n;
wire   [0:0] start_for_minus_vector30_U0_din;
wire    start_for_minus_vector30_U0_full_n;
wire   [0:0] start_for_minus_vector30_U0_dout;
wire    start_for_minus_vector30_U0_empty_n;
wire   [0:0] start_for_minus_vector31_U0_din;
wire    start_for_minus_vector31_U0_full_n;
wire   [0:0] start_for_minus_vector31_U0_dout;
wire    start_for_minus_vector31_U0_empty_n;
wire   [0:0] start_for_minus_vector32_U0_din;
wire    start_for_minus_vector32_U0_full_n;
wire   [0:0] start_for_minus_vector32_U0_dout;
wire    start_for_minus_vector32_U0_empty_n;
wire   [0:0] start_for_minus_vector33_U0_din;
wire    start_for_minus_vector33_U0_full_n;
wire   [0:0] start_for_minus_vector33_U0_dout;
wire    start_for_minus_vector33_U0_empty_n;
wire   [0:0] start_for_minus_vector34_U0_din;
wire    start_for_minus_vector34_U0_full_n;
wire   [0:0] start_for_minus_vector34_U0_dout;
wire    start_for_minus_vector34_U0_empty_n;
wire   [0:0] start_for_minus_vector35_U0_din;
wire    start_for_minus_vector35_U0_full_n;
wire   [0:0] start_for_minus_vector35_U0_dout;
wire    start_for_minus_vector35_U0_empty_n;
wire   [0:0] start_for_minus_vector_U0_din;
wire    start_for_minus_vector_U0_full_n;
wire   [0:0] start_for_minus_vector_U0_dout;
wire    start_for_minus_vector_U0_empty_n;
wire    minus_vector26_U0_start_full_n;
wire    minus_vector26_U0_start_write;
wire    minus_vector27_U0_start_full_n;
wire    minus_vector27_U0_start_write;
wire    minus_vector28_U0_start_full_n;
wire    minus_vector28_U0_start_write;
wire    minus_vector29_U0_start_full_n;
wire    minus_vector29_U0_start_write;
wire    minus_vector30_U0_start_full_n;
wire    minus_vector30_U0_start_write;
wire    minus_vector31_U0_start_full_n;
wire    minus_vector31_U0_start_write;
wire    minus_vector32_U0_start_full_n;
wire    minus_vector32_U0_start_write;
wire    minus_vector33_U0_start_full_n;
wire    minus_vector33_U0_start_write;
wire    minus_vector34_U0_start_full_n;
wire    minus_vector34_U0_start_write;
wire    minus_vector35_U0_start_full_n;
wire    minus_vector35_U0_start_write;
wire    minus_vector_U0_start_full_n;
wire    minus_vector_U0_start_write;

contrast_hls_rom_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
contrast_hls_rom_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .img_src_0_rows_V_out_din(Block_proc_U0_img_src_0_rows_V_out_din),
    .img_src_0_rows_V_out_full_n(img_src_0_rows_V_c_full_n),
    .img_src_0_rows_V_out_write(Block_proc_U0_img_src_0_rows_V_out_write),
    .img_src_0_cols_V_out_din(Block_proc_U0_img_src_0_cols_V_out_din),
    .img_src_0_cols_V_out_full_n(img_src_0_cols_V_c_full_n),
    .img_src_0_cols_V_out_write(Block_proc_U0_img_src_0_cols_V_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_Duplicate_my_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .input_r_TDATA(input_r_TDATA),
    .input_r_TVALID(input_r_TVALID),
    .input_r_TREADY(AXIvideo2Mat_U0_input_r_TREADY),
    .input_r_TKEEP(input_r_TKEEP),
    .input_r_TSTRB(input_r_TSTRB),
    .input_r_TUSER(input_r_TUSER),
    .input_r_TLAST(input_r_TLAST),
    .input_r_TID(input_r_TID),
    .input_r_TDEST(input_r_TDEST),
    .img_rows_V_dout(img_src_0_rows_V_c_dout),
    .img_rows_V_empty_n(img_src_0_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(img_src_0_cols_V_c_dout),
    .img_cols_V_empty_n(img_src_0_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_V_din(AXIvideo2Mat_U0_img_data_stream_V_din),
    .img_data_stream_V_full_n(img_src_0_data_strea_full_n),
    .img_data_stream_V_write(AXIvideo2Mat_U0_img_data_stream_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(img_src_0_rows_V_c26_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(img_src_0_cols_V_c27_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

Duplicate_my Duplicate_my_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Duplicate_my_U0_ap_start),
    .start_full_n(Duplicate_my_U0_start_full_n),
    .ap_done(Duplicate_my_U0_ap_done),
    .ap_continue(Duplicate_my_U0_ap_continue),
    .ap_idle(Duplicate_my_U0_ap_idle),
    .ap_ready(Duplicate_my_U0_ap_ready),
    .start_out(Duplicate_my_U0_start_out),
    .start_write(Duplicate_my_U0_start_write),
    .src_rows_V_dout(img_src_0_rows_V_c26_dout),
    .src_rows_V_empty_n(img_src_0_rows_V_c26_empty_n),
    .src_rows_V_read(Duplicate_my_U0_src_rows_V_read),
    .src_cols_V_dout(img_src_0_cols_V_c27_dout),
    .src_cols_V_empty_n(img_src_0_cols_V_c27_empty_n),
    .src_cols_V_read(Duplicate_my_U0_src_cols_V_read),
    .src_data_stream_V_dout(img_src_0_data_strea_dout),
    .src_data_stream_V_empty_n(img_src_0_data_strea_empty_n),
    .src_data_stream_V_read(Duplicate_my_U0_src_data_stream_V_read),
    .dst0_data_stream_V_din(Duplicate_my_U0_dst0_data_stream_V_din),
    .dst0_data_stream_V_full_n(img_src_c_0_data_str_full_n),
    .dst0_data_stream_V_write(Duplicate_my_U0_dst0_data_stream_V_write),
    .dst1_data_stream_V_din(Duplicate_my_U0_dst1_data_stream_V_din),
    .dst1_data_stream_V_full_n(img_src_c_1_data_str_full_n),
    .dst1_data_stream_V_write(Duplicate_my_U0_dst1_data_stream_V_write),
    .dst2_data_stream_V_din(Duplicate_my_U0_dst2_data_stream_V_din),
    .dst2_data_stream_V_full_n(img_src_c_2_data_str_full_n),
    .dst2_data_stream_V_write(Duplicate_my_U0_dst2_data_stream_V_write),
    .dst3_data_stream_V_din(Duplicate_my_U0_dst3_data_stream_V_din),
    .dst3_data_stream_V_full_n(img_src_c_3_data_str_full_n),
    .dst3_data_stream_V_write(Duplicate_my_U0_dst3_data_stream_V_write),
    .dst4_data_stream_V_din(Duplicate_my_U0_dst4_data_stream_V_din),
    .dst4_data_stream_V_full_n(img_src_c_4_data_str_full_n),
    .dst4_data_stream_V_write(Duplicate_my_U0_dst4_data_stream_V_write),
    .dst5_data_stream_V_din(Duplicate_my_U0_dst5_data_stream_V_din),
    .dst5_data_stream_V_full_n(img_src_c_5_data_str_full_n),
    .dst5_data_stream_V_write(Duplicate_my_U0_dst5_data_stream_V_write),
    .dst6_data_stream_V_din(Duplicate_my_U0_dst6_data_stream_V_din),
    .dst6_data_stream_V_full_n(img_src_c_6_data_str_full_n),
    .dst6_data_stream_V_write(Duplicate_my_U0_dst6_data_stream_V_write),
    .dst7_data_stream_V_din(Duplicate_my_U0_dst7_data_stream_V_din),
    .dst7_data_stream_V_full_n(img_src_c_7_data_str_full_n),
    .dst7_data_stream_V_write(Duplicate_my_U0_dst7_data_stream_V_write),
    .dst8_data_stream_V_din(Duplicate_my_U0_dst8_data_stream_V_din),
    .dst8_data_stream_V_full_n(img_src_c_8_data_str_full_n),
    .dst8_data_stream_V_write(Duplicate_my_U0_dst8_data_stream_V_write),
    .dst9_data_stream_V_din(Duplicate_my_U0_dst9_data_stream_V_din),
    .dst9_data_stream_V_full_n(img_src_c_9_data_str_full_n),
    .dst9_data_stream_V_write(Duplicate_my_U0_dst9_data_stream_V_write),
    .dst10_data_stream_V_din(Duplicate_my_U0_dst10_data_stream_V_din),
    .dst10_data_stream_V_full_n(img_src_c_10_data_st_full_n),
    .dst10_data_stream_V_write(Duplicate_my_U0_dst10_data_stream_V_write)
);

minus_vector26 minus_vector26_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector26_U0_ap_start),
    .ap_done(minus_vector26_U0_ap_done),
    .ap_continue(minus_vector26_U0_ap_continue),
    .ap_idle(minus_vector26_U0_ap_idle),
    .ap_ready(minus_vector26_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_0_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_0_data_str_empty_n),
    .src_data_stream_V_read(minus_vector26_U0_src_data_stream_V_read),
    .diff_sum(minus_vector26_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector26_U0_diff_sum_ap_vld)
);

minus_vector27 minus_vector27_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector27_U0_ap_start),
    .ap_done(minus_vector27_U0_ap_done),
    .ap_continue(minus_vector27_U0_ap_continue),
    .ap_idle(minus_vector27_U0_ap_idle),
    .ap_ready(minus_vector27_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_1_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_1_data_str_empty_n),
    .src_data_stream_V_read(minus_vector27_U0_src_data_stream_V_read),
    .diff_sum(minus_vector27_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector27_U0_diff_sum_ap_vld)
);

minus_vector28 minus_vector28_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector28_U0_ap_start),
    .ap_done(minus_vector28_U0_ap_done),
    .ap_continue(minus_vector28_U0_ap_continue),
    .ap_idle(minus_vector28_U0_ap_idle),
    .ap_ready(minus_vector28_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_2_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_2_data_str_empty_n),
    .src_data_stream_V_read(minus_vector28_U0_src_data_stream_V_read),
    .diff_sum(minus_vector28_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector28_U0_diff_sum_ap_vld)
);

minus_vector29 minus_vector29_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector29_U0_ap_start),
    .ap_done(minus_vector29_U0_ap_done),
    .ap_continue(minus_vector29_U0_ap_continue),
    .ap_idle(minus_vector29_U0_ap_idle),
    .ap_ready(minus_vector29_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_3_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_3_data_str_empty_n),
    .src_data_stream_V_read(minus_vector29_U0_src_data_stream_V_read),
    .diff_sum(minus_vector29_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector29_U0_diff_sum_ap_vld)
);

minus_vector30 minus_vector30_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector30_U0_ap_start),
    .ap_done(minus_vector30_U0_ap_done),
    .ap_continue(minus_vector30_U0_ap_continue),
    .ap_idle(minus_vector30_U0_ap_idle),
    .ap_ready(minus_vector30_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_4_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_4_data_str_empty_n),
    .src_data_stream_V_read(minus_vector30_U0_src_data_stream_V_read),
    .diff_sum(minus_vector30_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector30_U0_diff_sum_ap_vld)
);

minus_vector31 minus_vector31_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector31_U0_ap_start),
    .ap_done(minus_vector31_U0_ap_done),
    .ap_continue(minus_vector31_U0_ap_continue),
    .ap_idle(minus_vector31_U0_ap_idle),
    .ap_ready(minus_vector31_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_5_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_5_data_str_empty_n),
    .src_data_stream_V_read(minus_vector31_U0_src_data_stream_V_read),
    .diff_sum(minus_vector31_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector31_U0_diff_sum_ap_vld)
);

minus_vector32 minus_vector32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector32_U0_ap_start),
    .ap_done(minus_vector32_U0_ap_done),
    .ap_continue(minus_vector32_U0_ap_continue),
    .ap_idle(minus_vector32_U0_ap_idle),
    .ap_ready(minus_vector32_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_6_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_6_data_str_empty_n),
    .src_data_stream_V_read(minus_vector32_U0_src_data_stream_V_read),
    .diff_sum(minus_vector32_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector32_U0_diff_sum_ap_vld)
);

minus_vector33 minus_vector33_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector33_U0_ap_start),
    .ap_done(minus_vector33_U0_ap_done),
    .ap_continue(minus_vector33_U0_ap_continue),
    .ap_idle(minus_vector33_U0_ap_idle),
    .ap_ready(minus_vector33_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_7_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_7_data_str_empty_n),
    .src_data_stream_V_read(minus_vector33_U0_src_data_stream_V_read),
    .diff_sum(minus_vector33_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector33_U0_diff_sum_ap_vld)
);

minus_vector34 minus_vector34_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector34_U0_ap_start),
    .ap_done(minus_vector34_U0_ap_done),
    .ap_continue(minus_vector34_U0_ap_continue),
    .ap_idle(minus_vector34_U0_ap_idle),
    .ap_ready(minus_vector34_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_8_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_8_data_str_empty_n),
    .src_data_stream_V_read(minus_vector34_U0_src_data_stream_V_read),
    .diff_sum(minus_vector34_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector34_U0_diff_sum_ap_vld)
);

minus_vector35 minus_vector35_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector35_U0_ap_start),
    .ap_done(minus_vector35_U0_ap_done),
    .ap_continue(minus_vector35_U0_ap_continue),
    .ap_idle(minus_vector35_U0_ap_idle),
    .ap_ready(minus_vector35_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_9_data_str_dout),
    .src_data_stream_V_empty_n(img_src_c_9_data_str_empty_n),
    .src_data_stream_V_read(minus_vector35_U0_src_data_stream_V_read),
    .diff_sum(minus_vector35_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector35_U0_diff_sum_ap_vld)
);

minus_vector minus_vector_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(minus_vector_U0_ap_start),
    .ap_done(minus_vector_U0_ap_done),
    .ap_continue(minus_vector_U0_ap_continue),
    .ap_idle(minus_vector_U0_ap_idle),
    .ap_ready(minus_vector_U0_ap_ready),
    .src_data_stream_V_dout(img_src_c_10_data_st_dout),
    .src_data_stream_V_empty_n(img_src_c_10_data_st_empty_n),
    .src_data_stream_V_read(minus_vector_U0_src_data_stream_V_read),
    .diff_sum(minus_vector_U0_diff_sum),
    .diff_sum_ap_vld(minus_vector_U0_diff_sum_ap_vld)
);

fifo_w6_d2_A img_src_0_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_img_src_0_rows_V_out_din),
    .if_full_n(img_src_0_rows_V_c_full_n),
    .if_write(Block_proc_U0_img_src_0_rows_V_out_write),
    .if_dout(img_src_0_rows_V_c_dout),
    .if_empty_n(img_src_0_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w6_d2_A img_src_0_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_img_src_0_cols_V_out_din),
    .if_full_n(img_src_0_cols_V_c_full_n),
    .if_write(Block_proc_U0_img_src_0_cols_V_out_write),
    .if_dout(img_src_0_cols_V_c_dout),
    .if_empty_n(img_src_0_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w8_d2_A img_src_0_data_strea_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_V_din),
    .if_full_n(img_src_0_data_strea_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_V_write),
    .if_dout(img_src_0_data_strea_dout),
    .if_empty_n(img_src_0_data_strea_empty_n),
    .if_read(Duplicate_my_U0_src_data_stream_V_read)
);

fifo_w6_d2_A img_src_0_rows_V_c26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(img_src_0_rows_V_c26_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(img_src_0_rows_V_c26_dout),
    .if_empty_n(img_src_0_rows_V_c26_empty_n),
    .if_read(Duplicate_my_U0_src_rows_V_read)
);

fifo_w6_d2_A img_src_0_cols_V_c27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(img_src_0_cols_V_c27_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(img_src_0_cols_V_c27_dout),
    .if_empty_n(img_src_0_cols_V_c27_empty_n),
    .if_read(Duplicate_my_U0_src_cols_V_read)
);

fifo_w8_d2_A img_src_c_0_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst0_data_stream_V_din),
    .if_full_n(img_src_c_0_data_str_full_n),
    .if_write(Duplicate_my_U0_dst0_data_stream_V_write),
    .if_dout(img_src_c_0_data_str_dout),
    .if_empty_n(img_src_c_0_data_str_empty_n),
    .if_read(minus_vector26_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_1_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst1_data_stream_V_din),
    .if_full_n(img_src_c_1_data_str_full_n),
    .if_write(Duplicate_my_U0_dst1_data_stream_V_write),
    .if_dout(img_src_c_1_data_str_dout),
    .if_empty_n(img_src_c_1_data_str_empty_n),
    .if_read(minus_vector27_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_2_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst2_data_stream_V_din),
    .if_full_n(img_src_c_2_data_str_full_n),
    .if_write(Duplicate_my_U0_dst2_data_stream_V_write),
    .if_dout(img_src_c_2_data_str_dout),
    .if_empty_n(img_src_c_2_data_str_empty_n),
    .if_read(minus_vector28_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_3_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst3_data_stream_V_din),
    .if_full_n(img_src_c_3_data_str_full_n),
    .if_write(Duplicate_my_U0_dst3_data_stream_V_write),
    .if_dout(img_src_c_3_data_str_dout),
    .if_empty_n(img_src_c_3_data_str_empty_n),
    .if_read(minus_vector29_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_4_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst4_data_stream_V_din),
    .if_full_n(img_src_c_4_data_str_full_n),
    .if_write(Duplicate_my_U0_dst4_data_stream_V_write),
    .if_dout(img_src_c_4_data_str_dout),
    .if_empty_n(img_src_c_4_data_str_empty_n),
    .if_read(minus_vector30_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_5_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst5_data_stream_V_din),
    .if_full_n(img_src_c_5_data_str_full_n),
    .if_write(Duplicate_my_U0_dst5_data_stream_V_write),
    .if_dout(img_src_c_5_data_str_dout),
    .if_empty_n(img_src_c_5_data_str_empty_n),
    .if_read(minus_vector31_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_6_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst6_data_stream_V_din),
    .if_full_n(img_src_c_6_data_str_full_n),
    .if_write(Duplicate_my_U0_dst6_data_stream_V_write),
    .if_dout(img_src_c_6_data_str_dout),
    .if_empty_n(img_src_c_6_data_str_empty_n),
    .if_read(minus_vector32_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_7_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst7_data_stream_V_din),
    .if_full_n(img_src_c_7_data_str_full_n),
    .if_write(Duplicate_my_U0_dst7_data_stream_V_write),
    .if_dout(img_src_c_7_data_str_dout),
    .if_empty_n(img_src_c_7_data_str_empty_n),
    .if_read(minus_vector33_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_8_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst8_data_stream_V_din),
    .if_full_n(img_src_c_8_data_str_full_n),
    .if_write(Duplicate_my_U0_dst8_data_stream_V_write),
    .if_dout(img_src_c_8_data_str_dout),
    .if_empty_n(img_src_c_8_data_str_empty_n),
    .if_read(minus_vector34_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_9_data_str_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst9_data_stream_V_din),
    .if_full_n(img_src_c_9_data_str_full_n),
    .if_write(Duplicate_my_U0_dst9_data_stream_V_write),
    .if_dout(img_src_c_9_data_str_dout),
    .if_empty_n(img_src_c_9_data_str_empty_n),
    .if_read(minus_vector35_U0_src_data_stream_V_read)
);

fifo_w8_d2_A img_src_c_10_data_st_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_my_U0_dst10_data_stream_V_din),
    .if_full_n(img_src_c_10_data_st_full_n),
    .if_write(Duplicate_my_U0_dst10_data_stream_V_write),
    .if_dout(img_src_c_10_data_st_dout),
    .if_empty_n(img_src_c_10_data_st_empty_n),
    .if_read(minus_vector_U0_src_data_stream_V_read)
);

start_for_Duplicamb6 start_for_Duplicamb6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Duplicate_my_U0_din),
    .if_full_n(start_for_Duplicate_my_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_Duplicate_my_U0_dout),
    .if_empty_n(start_for_Duplicate_my_U0_empty_n),
    .if_read(Duplicate_my_U0_ap_ready)
);

start_for_minus_vncg start_for_minus_vncg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector26_U0_din),
    .if_full_n(start_for_minus_vector26_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector26_U0_dout),
    .if_empty_n(start_for_minus_vector26_U0_empty_n),
    .if_read(minus_vector26_U0_ap_ready)
);

start_for_minus_vocq start_for_minus_vocq_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector27_U0_din),
    .if_full_n(start_for_minus_vector27_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector27_U0_dout),
    .if_empty_n(start_for_minus_vector27_U0_empty_n),
    .if_read(minus_vector27_U0_ap_ready)
);

start_for_minus_vpcA start_for_minus_vpcA_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector28_U0_din),
    .if_full_n(start_for_minus_vector28_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector28_U0_dout),
    .if_empty_n(start_for_minus_vector28_U0_empty_n),
    .if_read(minus_vector28_U0_ap_ready)
);

start_for_minus_vqcK start_for_minus_vqcK_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector29_U0_din),
    .if_full_n(start_for_minus_vector29_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector29_U0_dout),
    .if_empty_n(start_for_minus_vector29_U0_empty_n),
    .if_read(minus_vector29_U0_ap_ready)
);

start_for_minus_vrcU start_for_minus_vrcU_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector30_U0_din),
    .if_full_n(start_for_minus_vector30_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector30_U0_dout),
    .if_empty_n(start_for_minus_vector30_U0_empty_n),
    .if_read(minus_vector30_U0_ap_ready)
);

start_for_minus_vsc4 start_for_minus_vsc4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector31_U0_din),
    .if_full_n(start_for_minus_vector31_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector31_U0_dout),
    .if_empty_n(start_for_minus_vector31_U0_empty_n),
    .if_read(minus_vector31_U0_ap_ready)
);

start_for_minus_vtde start_for_minus_vtde_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector32_U0_din),
    .if_full_n(start_for_minus_vector32_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector32_U0_dout),
    .if_empty_n(start_for_minus_vector32_U0_empty_n),
    .if_read(minus_vector32_U0_ap_ready)
);

start_for_minus_vudo start_for_minus_vudo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector33_U0_din),
    .if_full_n(start_for_minus_vector33_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector33_U0_dout),
    .if_empty_n(start_for_minus_vector33_U0_empty_n),
    .if_read(minus_vector33_U0_ap_ready)
);

start_for_minus_vvdy start_for_minus_vvdy_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector34_U0_din),
    .if_full_n(start_for_minus_vector34_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector34_U0_dout),
    .if_empty_n(start_for_minus_vector34_U0_empty_n),
    .if_read(minus_vector34_U0_ap_ready)
);

start_for_minus_vwdI start_for_minus_vwdI_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector35_U0_din),
    .if_full_n(start_for_minus_vector35_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector35_U0_dout),
    .if_empty_n(start_for_minus_vector35_U0_empty_n),
    .if_read(minus_vector35_U0_ap_ready)
);

start_for_minus_vxdS start_for_minus_vxdS_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_minus_vector_U0_din),
    .if_full_n(start_for_minus_vector_U0_full_n),
    .if_write(Duplicate_my_U0_start_write),
    .if_dout(start_for_minus_vector_U0_dout),
    .if_empty_n(start_for_minus_vector_U0_empty_n),
    .if_read(minus_vector_U0_ap_ready)
);

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ap_start;

assign Block_proc_U0_ap_continue = 1'b1;

assign Block_proc_U0_ap_start = ap_start;

assign Block_proc_U0_start_full_n = 1'b1;

assign Block_proc_U0_start_write = 1'b0;

assign Duplicate_my_U0_ap_continue = 1'b1;

assign Duplicate_my_U0_ap_start = start_for_Duplicate_my_U0_empty_n;

assign Duplicate_my_U0_start_full_n = (start_for_minus_vector_U0_full_n & start_for_minus_vector35_U0_full_n & start_for_minus_vector34_U0_full_n & start_for_minus_vector33_U0_full_n & start_for_minus_vector32_U0_full_n & start_for_minus_vector31_U0_full_n & start_for_minus_vector30_U0_full_n & start_for_minus_vector29_U0_full_n & start_for_minus_vector28_U0_full_n & start_for_minus_vector27_U0_full_n & start_for_minus_vector26_U0_full_n);

assign ap_done = ap_sync_done;

assign ap_idle = (minus_vector_U0_ap_idle & minus_vector35_U0_ap_idle & minus_vector34_U0_ap_idle & minus_vector33_U0_ap_idle & minus_vector32_U0_ap_idle & minus_vector31_U0_ap_idle & minus_vector30_U0_ap_idle & minus_vector29_U0_ap_idle & minus_vector28_U0_ap_idle & minus_vector27_U0_ap_idle & minus_vector26_U0_ap_idle & Duplicate_my_U0_ap_idle & Block_proc_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = AXIvideo2Mat_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = (minus_vector_U0_ap_done & minus_vector35_U0_ap_done & minus_vector34_U0_ap_done & minus_vector33_U0_ap_done & minus_vector32_U0_ap_done & minus_vector31_U0_ap_done & minus_vector30_U0_ap_done & minus_vector29_U0_ap_done & minus_vector28_U0_ap_done & minus_vector27_U0_ap_done & minus_vector26_U0_ap_done);

assign ap_sync_ready = AXIvideo2Mat_U0_ap_ready;

assign diff_sum_0 = minus_vector26_U0_diff_sum;

assign diff_sum_0_ap_vld = minus_vector26_U0_diff_sum_ap_vld;

assign diff_sum_1 = minus_vector27_U0_diff_sum;

assign diff_sum_10 = minus_vector_U0_diff_sum;

assign diff_sum_10_ap_vld = minus_vector_U0_diff_sum_ap_vld;

assign diff_sum_1_ap_vld = minus_vector27_U0_diff_sum_ap_vld;

assign diff_sum_2 = minus_vector28_U0_diff_sum;

assign diff_sum_2_ap_vld = minus_vector28_U0_diff_sum_ap_vld;

assign diff_sum_3 = minus_vector29_U0_diff_sum;

assign diff_sum_3_ap_vld = minus_vector29_U0_diff_sum_ap_vld;

assign diff_sum_4 = minus_vector30_U0_diff_sum;

assign diff_sum_4_ap_vld = minus_vector30_U0_diff_sum_ap_vld;

assign diff_sum_5 = minus_vector31_U0_diff_sum;

assign diff_sum_5_ap_vld = minus_vector31_U0_diff_sum_ap_vld;

assign diff_sum_6 = minus_vector32_U0_diff_sum;

assign diff_sum_6_ap_vld = minus_vector32_U0_diff_sum_ap_vld;

assign diff_sum_7 = minus_vector33_U0_diff_sum;

assign diff_sum_7_ap_vld = minus_vector33_U0_diff_sum_ap_vld;

assign diff_sum_8 = minus_vector34_U0_diff_sum;

assign diff_sum_8_ap_vld = minus_vector34_U0_diff_sum_ap_vld;

assign diff_sum_9 = minus_vector35_U0_diff_sum;

assign diff_sum_9_ap_vld = minus_vector35_U0_diff_sum_ap_vld;

assign input_r_TREADY = AXIvideo2Mat_U0_input_r_TREADY;

assign minus_vector26_U0_ap_continue = ap_sync_done;

assign minus_vector26_U0_ap_start = start_for_minus_vector26_U0_empty_n;

assign minus_vector26_U0_start_full_n = 1'b1;

assign minus_vector26_U0_start_write = 1'b0;

assign minus_vector27_U0_ap_continue = ap_sync_done;

assign minus_vector27_U0_ap_start = start_for_minus_vector27_U0_empty_n;

assign minus_vector27_U0_start_full_n = 1'b1;

assign minus_vector27_U0_start_write = 1'b0;

assign minus_vector28_U0_ap_continue = ap_sync_done;

assign minus_vector28_U0_ap_start = start_for_minus_vector28_U0_empty_n;

assign minus_vector28_U0_start_full_n = 1'b1;

assign minus_vector28_U0_start_write = 1'b0;

assign minus_vector29_U0_ap_continue = ap_sync_done;

assign minus_vector29_U0_ap_start = start_for_minus_vector29_U0_empty_n;

assign minus_vector29_U0_start_full_n = 1'b1;

assign minus_vector29_U0_start_write = 1'b0;

assign minus_vector30_U0_ap_continue = ap_sync_done;

assign minus_vector30_U0_ap_start = start_for_minus_vector30_U0_empty_n;

assign minus_vector30_U0_start_full_n = 1'b1;

assign minus_vector30_U0_start_write = 1'b0;

assign minus_vector31_U0_ap_continue = ap_sync_done;

assign minus_vector31_U0_ap_start = start_for_minus_vector31_U0_empty_n;

assign minus_vector31_U0_start_full_n = 1'b1;

assign minus_vector31_U0_start_write = 1'b0;

assign minus_vector32_U0_ap_continue = ap_sync_done;

assign minus_vector32_U0_ap_start = start_for_minus_vector32_U0_empty_n;

assign minus_vector32_U0_start_full_n = 1'b1;

assign minus_vector32_U0_start_write = 1'b0;

assign minus_vector33_U0_ap_continue = ap_sync_done;

assign minus_vector33_U0_ap_start = start_for_minus_vector33_U0_empty_n;

assign minus_vector33_U0_start_full_n = 1'b1;

assign minus_vector33_U0_start_write = 1'b0;

assign minus_vector34_U0_ap_continue = ap_sync_done;

assign minus_vector34_U0_ap_start = start_for_minus_vector34_U0_empty_n;

assign minus_vector34_U0_start_full_n = 1'b1;

assign minus_vector34_U0_start_write = 1'b0;

assign minus_vector35_U0_ap_continue = ap_sync_done;

assign minus_vector35_U0_ap_start = start_for_minus_vector35_U0_empty_n;

assign minus_vector35_U0_start_full_n = 1'b1;

assign minus_vector35_U0_start_write = 1'b0;

assign minus_vector_U0_ap_continue = ap_sync_done;

assign minus_vector_U0_ap_start = start_for_minus_vector_U0_empty_n;

assign minus_vector_U0_start_full_n = 1'b1;

assign minus_vector_U0_start_write = 1'b0;

assign start_for_Duplicate_my_U0_din = 1'b1;

assign start_for_minus_vector26_U0_din = 1'b1;

assign start_for_minus_vector27_U0_din = 1'b1;

assign start_for_minus_vector28_U0_din = 1'b1;

assign start_for_minus_vector29_U0_din = 1'b1;

assign start_for_minus_vector30_U0_din = 1'b1;

assign start_for_minus_vector31_U0_din = 1'b1;

assign start_for_minus_vector32_U0_din = 1'b1;

assign start_for_minus_vector33_U0_din = 1'b1;

assign start_for_minus_vector34_U0_din = 1'b1;

assign start_for_minus_vector35_U0_din = 1'b1;

assign start_for_minus_vector_U0_din = 1'b1;

endmodule //contrast_hls_rom
